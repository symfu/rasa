{{- /*

The template reads a file with a report (the report file is available
as an artifact in the model regression tests workflow) and returns
a markdown table with a summary of the tests.

*/ -}}
{{- /*

The print_result template returns data depends on available fields.

*/ -}}
{{ define "print_result" -}}
{{- if and (has (index .branch "micro avg") "f1-score") (has (index .master "micro avg") "f1-score") -}}
{{ printf "%.4f" (index (index .branch "micro avg") "f1-score") }} ({{ printf "%.2f" ((index (index .master "micro avg") "f1-score") | math.Sub (index (index .branch "micro avg") "f1-score")) }})
{{- else if and (has .branch "accuracy") (has .master "accuracy") -}}
{{ printf "%.4f" .branch.accuracy }} ({{ printf "%.2f" (.master.accuracy | math.Sub .branch.accuracy) }})
{{- else if and (has .branch "accuracy") (has (index .master "micro avg") "f1-score") -}}
{{ printf "%.4f" .branch.accuracy }} ({{ printf "%.2f" ((index (index .master "micro avg") "f1-score") | math.Sub .branch.accuracy) }})
{{- else if and (has (index .branch "micro avg") "f1-score") (has .master "accuracy") -}}
{{ printf "%.4f" (index (index .branch "micro avg") "f1-score") }} ({{ printf "%.2f" (.master.accuracy | math.Sub (index (index .branch "micro avg") "f1-score")) }})
{{- else if (has .branch "accuracy") -}}
{{ printf "%.4f" .branch.accuracy }} (`no data`)
{{- else if has (index .branch "micro avg") "f1-score" -}}
{{ printf "%.4f" (index (index .branch "micro avg") "f1-score") }} (`no data`)
{{- else -}}
`no data`
{{- end -}}
{{- end -}}

{{- $results_master := (datasource "results_master") -}}
{{ range $dataset, $config := (datasource "data")}}
{{- $dataset_master := (index $results_master $dataset) -}}
Dataset: `{{$dataset}}`, Dataset repository branch: `{{ (index $config (index (keys $config) 0)).dataset_repository_branch }}`

| Configuration | Intent Classification Micro F1 | Entity Recognition Micro F1 | Response Selection Micro F1 |
|---------------|-----------------|-----------------|-------------------|
{{ range $config_name, $config_data := $config -}}
| `{{ $config_name }}`<br> test: `{{ $config_data.test_run_time }}`, train: `{{ $config_data.train_run_time }}`, total: `{{ $config_data.total_run_time }}`|
{{- if has $config_data "intent_classification" -}}
{{- /* Use results from branch if there is lack of data doesn't exist in results from scheduled version */ -}}
{{- $intent_class_master := $config_data.intent_classification -}}
{{- if has $dataset_master $config_name -}}
{{- $intent_class_master = (index $dataset_master $config_name).intent_classification -}}
{{- end -}}
{{- $intent_class := index $config_data.intent_classification -}}
{{ template "print_result" (dict "branch" $intent_class "master" $intent_class_master) }}|
{{- else -}}
`no data`|
{{- end -}}
{{- if has $config_data "entity_prediction" -}}
{{- /* Use results from branch if there is lack of data doesn't exist in results from scheduled version */ -}}
{{- $entity_class_master := index $config_data.entity_prediction -}}
{{- if has $dataset_master $config_name -}}
{{- $entity_class_master = (index $dataset_master $config_name).entity_prediction -}}
{{- end -}}
{{- $entity_class := $config_data.entity_prediction -}}
{{ template "print_result" (dict "branch" $entity_class "master" $entity_class_master) }}|
{{- else -}}
`no data`|
{{- end -}}
{{- if has $config_data "response_selection" -}}
{{- /* Use results from branch if there is lack of data doesn't exist in results from scheduled version */ -}}
{{- $response_class_master := index $config_data.response_selection -}}
{{- if has $dataset_master $config_name -}}
{{- $response_class_master = (index $dataset_master $config_name).response_selection -}}
{{- end -}}
{{- $response_class := $config_data.response_selection -}}
{{ template "print_result" (dict "branch" $response_class "master" $response_class_master) }}|
{{- else -}}
`no data`|
{{- end }}
{{end}}
{{end}}
